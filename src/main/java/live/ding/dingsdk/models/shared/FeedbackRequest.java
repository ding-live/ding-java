/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package live.ding.dingsdk.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import live.ding.dingsdk.utils.Utils;


public class FeedbackRequest {

    /**
     * Your customer UUID, which can be found in the API settings in the dashboard.
     */
    @JsonProperty("customer_uuid")
    private String customerUuid;

    /**
     * An E.164 formatted phone number.
     */
    @JsonProperty("phone_number")
    private String phoneNumber;

    /**
     * The type of the feedback.
     */
    @JsonProperty("status")
    private FeedbackRequestStatus status;

    @JsonCreator
    public FeedbackRequest(
            @JsonProperty("customer_uuid") String customerUuid,
            @JsonProperty("phone_number") String phoneNumber,
            @JsonProperty("status") FeedbackRequestStatus status) {
        Utils.checkNotNull(customerUuid, "customerUuid");
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        Utils.checkNotNull(status, "status");
        this.customerUuid = customerUuid;
        this.phoneNumber = phoneNumber;
        this.status = status;
    }

    /**
     * Your customer UUID, which can be found in the API settings in the dashboard.
     */
    @JsonIgnore
    public String customerUuid() {
        return customerUuid;
    }

    /**
     * An E.164 formatted phone number.
     */
    @JsonIgnore
    public String phoneNumber() {
        return phoneNumber;
    }

    /**
     * The type of the feedback.
     */
    @JsonIgnore
    public FeedbackRequestStatus status() {
        return status;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Your customer UUID, which can be found in the API settings in the dashboard.
     */
    public FeedbackRequest withCustomerUuid(String customerUuid) {
        Utils.checkNotNull(customerUuid, "customerUuid");
        this.customerUuid = customerUuid;
        return this;
    }

    /**
     * An E.164 formatted phone number.
     */
    public FeedbackRequest withPhoneNumber(String phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * The type of the feedback.
     */
    public FeedbackRequest withStatus(FeedbackRequestStatus status) {
        Utils.checkNotNull(status, "status");
        this.status = status;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FeedbackRequest other = (FeedbackRequest) o;
        return 
            Objects.deepEquals(this.customerUuid, other.customerUuid) &&
            Objects.deepEquals(this.phoneNumber, other.phoneNumber) &&
            Objects.deepEquals(this.status, other.status);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            customerUuid,
            phoneNumber,
            status);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FeedbackRequest.class,
                "customerUuid", customerUuid,
                "phoneNumber", phoneNumber,
                "status", status);
    }
    
    public final static class Builder {
 
        private String customerUuid;
 
        private String phoneNumber;
 
        private FeedbackRequestStatus status;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Your customer UUID, which can be found in the API settings in the dashboard.
         */
        public Builder customerUuid(String customerUuid) {
            Utils.checkNotNull(customerUuid, "customerUuid");
            this.customerUuid = customerUuid;
            return this;
        }

        /**
         * An E.164 formatted phone number.
         */
        public Builder phoneNumber(String phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * The type of the feedback.
         */
        public Builder status(FeedbackRequestStatus status) {
            Utils.checkNotNull(status, "status");
            this.status = status;
            return this;
        }
        
        public FeedbackRequest build() {
            return new FeedbackRequest(
                customerUuid,
                phoneNumber,
                status);
        }
    }
}

